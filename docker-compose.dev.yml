version: "3.9"

services:
  postgres:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_DB: petakeu
      POSTGRES_USER: petakeu
      POSTGRES_PASSWORD: petakeu
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U petakeu"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-10T01-41-38Z
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - minio-data:/data

  api:
    build:
      context: .
      dockerfile: apps/server/Dockerfile.dev
    environment:
      PORT: 4000
      DATABASE_URL: postgresql://petakeu:petakeu@postgres:5432/petakeu
      REDIS_URL: redis://redis:6379
      STORAGE_BUCKET: uploads
      STORAGE_ENDPOINT: http://minio:9000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "4000:4000"
    volumes:
      - .:/app
      - api-node-modules:/app/node_modules

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    environment:
      VITE_API_BASE_URL: http://api:4000/api
    depends_on:
      api:
        condition: service_started
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - web-node-modules:/app/node_modules

volumes:
  postgres-data:
  minio-data:
  api-node-modules:
  web-node-modules:
